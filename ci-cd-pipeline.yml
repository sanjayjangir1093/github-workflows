name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: |
          docker build -t your-dockerhub-username/your-app-name:${{ github.sha }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker push your-dockerhub-username/your-app-name:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/your-deployment-name your-container-name=your-dockerhub-username/your-app-name:${{ github.sha }}
          kubectl rollout status deployment/your-deployment-name

      - name: Notify Slack
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment failed for commit: '${{ github.sha }}'"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack
        if: ${{ success() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment succeeded for commit: '${{ github.sha }}'"}' ${{ secrets.SLACK_WEBHOOK_URL }}
